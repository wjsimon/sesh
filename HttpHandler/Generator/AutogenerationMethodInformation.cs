namespace SSHC.Generator
{
    internal record AutogenerationMethodInformation
    {
        public AutogenerationMethodInformation(
            string methodName, 
            AutogeneratedMethodType type, 
            Dictionary<Type, string> parametersMetaData, 
            int fromBodyIndex, 
            Type returnType)
        {
            MethodName = methodName;
            Type = type;
            FromBodyIndex = fromBodyIndex;
            ReturnType = returnType;

            //this block "sorts" the dictionary to make access of the frombody element much easiert
            if (fromBodyIndex > 0)
            {
                var elem = parametersMetaData.ElementAt(fromBodyIndex);
                var spliced = parametersMetaData.Remove(elem.Key);
                ParametersMetaData = parametersMetaData;
                ParametersMetaData.Add(elem.Key, elem.Value);
            }
            else
            {
                ParametersMetaData = parametersMetaData;
            }
        }

        public string MethodName { get; init; }
        public AutogeneratedMethodType Type { get; init; }
        public Dictionary<Type, string> ParametersMetaData { get; init; }
        public int FromBodyIndex { get; init; }
        public Type ReturnType { get; init; }
    }


}
